 /** Creating and searching TreeMaps and Treesets
 * Computer Engineering Technology-Computer Science: Level 3
 * 
 * Professor: James Mwangi PhD
 * 
 * Student Name:Thomas Stanley
 * Student ID: 41037136
 * Program: CET
 * Course: 8130
 * Lab Section: 301
 * 
 */

/**
 * Contains displayMenu() for use in main
 * @author Thomas Stanley
 */
public class TestSetMap {
	/**
	 * Displays menu for user to select option
	 */
	static void displayMenu(){
		System.out.println("Please Select One Of The Following: ");
		System.out.println("1. Create a TreeMap of data from the text file.");
		System.out.println("2. Display the TreeMap.");
		System.out.println("3. Search for a given value key or value in the TreeMap.");
		System.out.println("4. Create and display a keys TreeSet and a values TreeSet from the TreeMap");
		System.out.println("5. Add new key-value data to the TreeMap.");
		System.out.println("6. Sort and display values TreeSet in descending order.");
		System.out.println("7. Exit.");
	}

	/**
	 * Main method for test class. Contains main menu for user input.
	 * @param args Arguments in main
	 */
	public static void main(String[] args) {
		//creating new SetMapLib object
		SetMapLib mapLib = new SetMapLib();
		boolean loop = true;
		//menu loop
		while(loop==true){
		displayMenu();
		//try catch to handle exceptions
		try{
			int option = mapLib.input.nextInt();

			switch(option){
			//creating treemap from file input
			case 1:
			mapLib.createTreeMap(mapLib.treeMap);
			break;
			
			//displaying the treemap
			case 2:
			mapLib.displayTreeMap(mapLib.treeMap);
			break;
			
			//searching the treemap by numeric key
			case 3:
			mapLib.searchTreeMap(mapLib.treeMap, mapLib.input);
			break;

			//creating two treesets from one treemap
			case 4:
			mapLib.createTreeSet(mapLib.treeMap, mapLib.values, mapLib.keys);
			break;

			//changing the value of a user entered key in the treemap
			case 5:
			mapLib.updateTreeMap(mapLib.treeMap, mapLib.input);
			break;

			//reversing and displaying a reversed treeset previously generated by case 4
			case 6:
			mapLib.reverseTreeSet(mapLib.values);
			break;

			//exit
			case 7:
			System.out.println("Exiting...");
			mapLib.input.close();
			loop=false;
			break;
			
			//default case for erroneous option entry
			default: 
			System.out.println("Bad Menu Entry, Please Enter Again");
			}

		}catch(Exception e){
			System.out.println("Main exception");
		return;
		}//catch
		}//while loop
		
	}//main

}//class
